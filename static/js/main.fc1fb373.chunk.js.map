{"version":3,"sources":["context/TodoContext.js","components/Todo.jsx","components/TodoList.jsx","App.js","context/reducer.js","index.js"],"names":["TodoLayerContext","createContext","TodoLayer","initialState","reducer","children","Provider","value","useReducer","useTodoLayerValue","useContext","Todo","todo","dispatch","useState","editable","setEditable","content","setContent","todoStyle","clsx","isCompleted","className","onClick","todoId","id","type","payload","onChange","event","target","newValue","updateTodo","TodoList","todos","map","App","inputRef","useRef","useEffect","current","focus","countTodo","countDone","push","length","onSubmit","preventDefault","newTodo","Math","floor","random","placeholder","ref","state","action","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAEaA,EAAmBC,0BAEnBC,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,SAAzB,OACrB,cAACL,EAAiBM,SAAlB,CAA2BC,MAAOC,qBAAWJ,EAAQD,GAArD,SACKE,KAGII,EAAoB,kBAAMC,qBAAWV,ICgEnCW,EArEF,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KAAW,EACFH,IADE,yCACdI,EADc,OAEOC,oBAAS,GAFhB,mBAElBC,EAFkB,KAERC,EAFQ,OAGKF,mBAASF,EAAKK,SAHnB,mBAGlBA,EAHkB,KAGTC,EAHS,KA4BnBC,EAAYC,aAAI,mBACnB,YAAa,GADM,cAEnB,YAAcR,EAAKS,aAFA,IAKtB,OACE,sBAAKC,UAAWH,EAAhB,UACE,qBAAKI,QAAS,kBAAOR,EAAW,IA9BdS,EA8BgCZ,EAAKa,QA7BzDZ,EAAS,CACPa,KAAM,gBACNC,QAASH,KAHQ,IAACA,GA8BlB,SACGT,EACC,uBACEW,KAAK,OACLnB,MAAOU,EACPK,UAAU,kBACVM,SAAU,SAACC,GAAD,OAAWX,EAAWW,EAAMC,OAAOvB,UAG/CK,EAAKK,UAGT,sBAAKK,UAAU,aAAf,UACE,cAAC,IAAD,CACEA,UAAU,YACVC,QAAS,kBAvCGC,EAuCcZ,EAAKa,QAtCrCZ,EAAS,CACPa,KAAM,cACNC,QAASH,IAHM,IAACA,KAyCbT,EACC,cAAC,IAAD,CACEO,UAAU,YACVC,QAAS,YArCA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQO,EAAe,EAAfA,SAC5BlB,EAAS,CACPa,KAAM,cACNC,QAAS,CACPH,SACAO,cAiCMC,CAAW,CAAER,OAAQZ,EAAKa,GAAIM,SAAUd,IACxCD,GAAY,GACZE,EAAW,OAIf,cAAC,IAAD,CAAYI,UAAU,YAAYC,QAAS,kBAAMP,GAAY,aCxDxDiB,EAPE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,qBAAKZ,UAAU,YAAf,SACGY,GAASA,EAAMC,KAAI,SAACvB,GAAD,OAAU,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKa,UCgErCW,G,MAjEH,WAAO,IAAD,EACc3B,IADd,mBACPyB,EADO,KACPA,MAASrB,EADF,OAEcC,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,KAIVmB,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,UAChB,IAEH,IAAMC,EAAY,GACZC,EAAY,GAClBT,GACEA,EAAMC,KAAI,SAACvB,KACT,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMS,cAAeqB,EAAUE,KAAKhC,IACjC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMS,cAAesB,EAAUC,KAAKhC,MAsBxC,OACE,sBAAKU,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,QAAd,UACE,2CADF,IACwBoB,EAAUG,OAAQ,OAE1C,qBAAIvB,UAAU,QAAd,UACE,0CADF,IACuBqB,EAAUE,OAAQ,UAG3C,uBAAMC,SA7BW,SAACjB,GAGpB,GAFAA,EAAMkB,iBAEF9B,EAAS,CACX,IAAM+B,EAAU,CACdvB,GAAIwB,KAAKC,MAAsB,SAAhBD,KAAKE,UACpBlC,UACAI,aAAa,GAGfR,EAAS,CACPa,KAAM,WACNC,QAASqB,IAGX9B,EAAW,MAcmBI,UAAU,YAAxC,UACE,uBACEI,KAAK,OACLnB,MAAOU,EACPK,UAAU,aACV8B,YAAY,yBACZC,IAAKhB,EACLT,SAAU,SAACC,GAAD,OAAWX,EAAWW,EAAMC,OAAOvB,UAG/C,wBAAQe,UAAU,cAAlB,oBAGF,cAAC,EAAD,CAAUY,MAAOA,S,cCTR9B,EAlDC,SAACkD,EAAOC,GACtB,OAAQA,EAAO7B,MACb,IAAK,WACH,OAAO,2BACF4B,GADL,IAEEpB,MAAM,CAAEqB,EAAO5B,SAAV,mBAAsB2B,EAAMpB,UAGrC,IAAK,cACH,OAAO,2BACFoB,GADL,IAEEpB,MAAO,YAAIoB,EAAMpB,OAAOsB,QAAO,SAAC5C,GAAD,OAAUA,EAAKa,KAAO8B,EAAO5B,aAG9D,IAAK,cACH,OAAO,2BACF2B,GADL,IAEEpB,MAAOoB,EAAMpB,MAAMC,KAAI,SAACvB,GACtB,OAAIA,EAAKa,KAAO8B,EAAO5B,QAAQH,OACtBZ,EAGF,2BACFA,GADL,IAEEK,QAASsC,EAAO5B,QAAQI,gBAKlC,IAAK,gBACH,OAAO,2BACFuB,GADL,IAEEpB,MAAOoB,EAAMpB,MAAMC,KAAI,SAACvB,GACtB,OAAGA,EAAKa,KAAO8B,EAAO5B,QACbf,EAEF,2BACFA,GADL,IAEES,aAAcT,EAAKS,mBAK3B,QACE,OAAO,eACFiC,KC5CXG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAWxD,aDTa,CAC1B+B,MAAO,ICQkC9B,QAASA,EAAhD,SACE,cAAC,EAAD,QAGJwD,SAASC,eAAe,W","file":"static/js/main.fc1fb373.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const TodoLayerContext = createContext();\r\n\r\nexport const TodoLayer = ({initialState, reducer, children}) => (\r\n    <TodoLayerContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </TodoLayerContext.Provider>\r\n)\r\nexport const useTodoLayerValue = () => useContext(TodoLayerContext)","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { GrFormClose, GrFormEdit, GrFormCheckmark } from 'react-icons/gr';\r\nimport { useTodoLayerValue } from '../context/TodoContext';\r\nconst Todo = ({ todo }) => {\r\n  const [{}, dispatch] = useTodoLayerValue();\r\n  const [editable, setEditable] = useState(false);\r\n  const [content, setContent] = useState(todo.content);\r\n\r\n  const completeTodo = (todoId) => {\r\n    dispatch({\r\n      type: 'COMPLETE_TODO',\r\n      payload: todoId,\r\n    });\r\n  };\r\n  const removeTodo = (todoId) => {\r\n    dispatch({\r\n      type: 'REMOVE_TODO',\r\n      payload: todoId,\r\n    });\r\n  };\r\n\r\n  const updateTodo = ({ todoId, newValue }) => {\r\n    dispatch({\r\n      type: 'UPDATE_TODO',\r\n      payload: {\r\n        todoId,\r\n        newValue,\r\n      },\r\n    });\r\n  };\r\n\r\n  const todoStyle = clsx({\r\n    ['todo-row']: true,\r\n    ['completed']: todo.isCompleted,\r\n  });\r\n\r\n  return (\r\n    <div className={todoStyle}>\r\n      <div onClick={() => (editable ? '' : completeTodo(todo.id))}>\r\n        {editable ? (\r\n          <input\r\n            type=\"text\"\r\n            value={content}\r\n            className=\"todo-input-edit\"\r\n            onChange={(event) => setContent(event.target.value)}\r\n          />\r\n        ) : (\r\n          todo.content\r\n        )}\r\n      </div>\r\n      <div className=\"todo-icons\">\r\n        <GrFormClose\r\n          className=\"todo-icon\"\r\n          onClick={() => removeTodo(todo.id)}\r\n        />\r\n        {editable ? (\r\n          <GrFormCheckmark\r\n            className=\"todo-icon\"\r\n            onClick={() => {\r\n              updateTodo({ todoId: todo.id, newValue: content });\r\n              setEditable(false);\r\n              setContent('');\r\n            }}\r\n          />\r\n        ) : (\r\n          <GrFormEdit className=\"todo-icon\" onClick={() => setEditable(true)} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst TodoList = ({ todos }) => {\r\n  return (\r\n    <div className=\"todo-list\">\r\n      {todos && todos.map((todo) => <Todo key={todo.id} todo={todo} />)}\r\n    </div>\r\n  );\r\n};\r\nexport default TodoList;","import React, { useState, useEffect, useRef } from \"react\";\nimport TodoList from \"./components/TodoList\";\nimport { useTodoLayerValue } from \"./context/TodoContext\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [{ todos }, dispatch] = useTodoLayerValue();\n  const [content, setContent] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const countTodo = [];\n  const countDone = [];\n  todos &&\n    todos.map((todo) => {\n      !todo?.isCompleted && countTodo.push(todo);\n      todo?.isCompleted && countDone.push(todo);\n    });\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (content) {\n      const newTodo = {\n        id: Math.floor(Math.random() * 39399393),\n        content,\n        isCompleted: false,\n      };\n\n      dispatch({\n        type: \"ADD_TODO\",\n        payload: newTodo,\n      });\n\n      setContent(\"\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className='countPart'>\n        <h1 className=\"count\">\n          <span>Todos :</span> {countTodo.length}{\" \"}\n        </h1>\n        <h1 className=\"count\">\n          <span>Done :</span> {countDone.length}{\" \"}\n        </h1>\n      </div>\n      <form onSubmit={handleSubmit} className=\"todo-form\">\n        <input\n          type=\"text\"\n          value={content}\n          className=\"todo-input\"\n          placeholder=\"What Are you plaining?\"\n          ref={inputRef}\n          onChange={(event) => setContent(event.target.value)}\n        />\n\n        <button className=\"todo-button\">Add</button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n\nexport default App;\n","export const initialState = {\r\n  todos: [\r\n    \r\n  ],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: [action.payload, ...state.todos],\r\n      };\r\n\r\n    case \"REMOVE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos].filter((todo) => todo.id !== action.payload),\r\n      };\r\n\r\n      case 'UPDATE_TODO':\r\n        return {\r\n          ...state,\r\n          todos: state.todos.map((todo) => {\r\n            if (todo.id !== action.payload.todoId) {\r\n              return todo;\r\n            }\r\n  \r\n            return {\r\n              ...todo,\r\n              content: action.payload.newValue,\r\n            };\r\n          }),\r\n        };\r\n\r\n    case \"COMPLETE_TODO\":\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todo)=>{\r\n          if(todo.id !== action.payload) {\r\n            return todo;\r\n          }\r\n          return {\r\n            ...todo,\r\n            isCompleted: !todo.isCompleted\r\n          }\r\n        })\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { TodoLayer } from \"./context/TodoContext\";\nimport reducer, { initialState } from \"./context/reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </TodoLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}